"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Buckets = exports._Buckets = exports.Bucket = exports._Bucket = exports.Tasks = exports._Tasks = exports.Task = exports._Task = exports.TaskDetails = exports._TaskDetails = exports.Plans = exports._Plans = exports.Plan = exports._Plan = exports.PlanDetails = exports._PlanDetails = exports.Planner = exports._Planner = void 0;
var tslib_1 = require("tslib");
var common_1 = require("@pnp/common-commonjs");
var odata_1 = require("@pnp/odata-commonjs");
var graphqueryable_js_1 = require("../graphqueryable.js");
var decorators_js_1 = require("../decorators.js");
var operations_js_1 = require("../operations.js");
var decorators_js_2 = require("../decorators.js");
/**
 * Planner
 */
var _Planner = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Planner, _super);
    function _Planner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Planner.prototype, "plans", {
        // Should Only be able to get by id, or else error occur
        get: function () {
            return (0, exports.Plans)(this);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_Planner.prototype, "tasks", {
        // Should Only be able to get by id, or else error occur
        get: function () {
            return (0, exports.Tasks)(this);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_Planner.prototype, "buckets", {
        // Should Only be able to get by id, or else error occur
        get: function () {
            return (0, exports.Buckets)(this);
        },
        enumerable: false,
        configurable: true
    });
    _Planner = (0, tslib_1.__decorate)([
        (0, decorators_js_2.defaultPath)("planner")
    ], _Planner);
    return _Planner;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._Planner = _Planner;
exports.Planner = (0, graphqueryable_js_1.graphInvokableFactory)(_Planner);
/**
 * Details
 */
var _PlanDetails = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_PlanDetails, _super);
    function _PlanDetails() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _PlanDetails = (0, tslib_1.__decorate)([
        (0, decorators_js_2.defaultPath)("details"),
        (0, decorators_js_1.updateableWithETag)()
    ], _PlanDetails);
    return _PlanDetails;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._PlanDetails = _PlanDetails;
exports.PlanDetails = (0, graphqueryable_js_1.graphInvokableFactory)(_PlanDetails);
/**
 * Plan
 */
var _Plan = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Plan, _super);
    function _Plan() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Plan.prototype, "tasks", {
        get: function () {
            return (0, exports.Tasks)(this);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_Plan.prototype, "buckets", {
        get: function () {
            return (0, exports.Buckets)(this);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_Plan.prototype, "details", {
        get: function () {
            return (0, exports.PlanDetails)(this);
        },
        enumerable: false,
        configurable: true
    });
    _Plan = (0, tslib_1.__decorate)([
        (0, decorators_js_1.updateableWithETag)(),
        (0, decorators_js_1.deleteableWithETag)()
    ], _Plan);
    return _Plan;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._Plan = _Plan;
exports.Plan = (0, graphqueryable_js_1.graphInvokableFactory)(_Plan);
var _Plans = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Plans, _super);
    function _Plans() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Create a new Planner Plan.
     *
     * @param owner Id of Group object.
     * @param title The Title of the Plan.
     */
    _Plans.prototype.add = function (owner, title) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var data;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, (0, operations_js_1.graphPost)(this, (0, odata_1.body)({ owner: owner, title: title }))];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                data: data,
                                plan: this.getById(data.id),
                            }];
                }
            });
        });
    };
    _Plans = (0, tslib_1.__decorate)([
        (0, decorators_js_2.defaultPath)("plans"),
        (0, decorators_js_1.getById)(exports.Plan)
    ], _Plans);
    return _Plans;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._Plans = _Plans;
exports.Plans = (0, graphqueryable_js_1.graphInvokableFactory)(_Plans);
/**
 * Details
 */
var _TaskDetails = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_TaskDetails, _super);
    function _TaskDetails() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _TaskDetails = (0, tslib_1.__decorate)([
        (0, decorators_js_2.defaultPath)("details"),
        (0, decorators_js_1.updateableWithETag)()
    ], _TaskDetails);
    return _TaskDetails;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._TaskDetails = _TaskDetails;
exports.TaskDetails = (0, graphqueryable_js_1.graphInvokableFactory)(_TaskDetails);
/**
 * Task
 */
var _Task = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Task, _super);
    function _Task() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Task.prototype, "details", {
        get: function () {
            return (0, exports.TaskDetails)(this);
        },
        enumerable: false,
        configurable: true
    });
    _Task = (0, tslib_1.__decorate)([
        (0, decorators_js_1.updateableWithETag)(),
        (0, decorators_js_1.deleteableWithETag)()
    ], _Task);
    return _Task;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._Task = _Task;
exports.Task = (0, graphqueryable_js_1.graphInvokableFactory)(_Task);
/**
 * Tasks
 */
var _Tasks = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Tasks, _super);
    function _Tasks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Create a new Planner Task.
     *
     * @param planId Id of Plan.
     * @param title The Title of the Task.
     * @param assignments Assign the task
     * @param bucketId Id of Bucket
     */
    _Tasks.prototype.add = function (planId, title, assignments, bucketId) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var postBody, data;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        postBody = (0, common_1.assign)({
                            planId: planId,
                            title: title,
                        }, assignments);
                        if (bucketId) {
                            postBody = (0, common_1.assign)(postBody, {
                                bucketId: bucketId,
                            });
                        }
                        return [4 /*yield*/, (0, operations_js_1.graphPost)(this, (0, odata_1.body)(postBody))];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                data: data,
                                task: this.getById(data.id),
                            }];
                }
            });
        });
    };
    _Tasks = (0, tslib_1.__decorate)([
        (0, decorators_js_2.defaultPath)("tasks"),
        (0, decorators_js_1.getById)(exports.Task)
    ], _Tasks);
    return _Tasks;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._Tasks = _Tasks;
exports.Tasks = (0, graphqueryable_js_1.graphInvokableFactory)(_Tasks);
/**
 * Bucket
 */
var _Bucket = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Bucket, _super);
    function _Bucket() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Bucket.prototype, "tasks", {
        get: function () {
            return (0, exports.Tasks)(this);
        },
        enumerable: false,
        configurable: true
    });
    _Bucket = (0, tslib_1.__decorate)([
        (0, decorators_js_1.updateableWithETag)(),
        (0, decorators_js_1.deleteableWithETag)()
    ], _Bucket);
    return _Bucket;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._Bucket = _Bucket;
exports.Bucket = (0, graphqueryable_js_1.graphInvokableFactory)(_Bucket);
/**
 * Buckets
 */
var _Buckets = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Buckets, _super);
    function _Buckets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Create a new Bucket.
     *
     * @param name Name of Bucket object.
     * @param planId The Id of the Plan.
     * @param oderHint Hint used to order items of this type in a list view.
     */
    _Buckets.prototype.add = function (name, planId, orderHint) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var postBody, data;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        postBody = {
                            name: name,
                            orderHint: orderHint ? orderHint : "",
                            planId: planId,
                        };
                        return [4 /*yield*/, (0, operations_js_1.graphPost)(this, (0, odata_1.body)(postBody))];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                bucket: this.getById(data.id),
                                data: data,
                            }];
                }
            });
        });
    };
    _Buckets = (0, tslib_1.__decorate)([
        (0, decorators_js_2.defaultPath)("buckets"),
        (0, decorators_js_1.getById)(exports.Bucket)
    ], _Buckets);
    return _Buckets;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._Buckets = _Buckets;
exports.Buckets = (0, graphqueryable_js_1.graphInvokableFactory)(_Buckets);
//# sourceMappingURL=types.js.map