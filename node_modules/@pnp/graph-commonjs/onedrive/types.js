"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DriveItems = exports._DriveItems = exports.DriveItem = exports._DriveItem = exports.Root = exports._Root = exports.Drives = exports._Drives = exports.Drive = exports._Drive = void 0;
var tslib_1 = require("tslib");
var graphqueryable_js_1 = require("../graphqueryable.js");
var common_1 = require("@pnp/common-commonjs");
var decorators_js_1 = require("../decorators.js");
var odata_1 = require("@pnp/odata-commonjs");
var operations_js_1 = require("../operations.js");
/**
 * Describes a Drive instance
 *
 */
var _Drive = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Drive, _super);
    function _Drive() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Drive.prototype, "root", {
        get: function () {
            return (0, exports.Root)(this);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_Drive.prototype, "list", {
        get: function () {
            return this.clone(graphqueryable_js_1.GraphQueryableInstance, "list");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_Drive.prototype, "recent", {
        get: function () {
            return (0, exports.DriveItems)(this, "recent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_Drive.prototype, "sharedWithMe", {
        get: function () {
            return (0, exports.DriveItems)(this, "sharedWithMe");
        },
        enumerable: false,
        configurable: true
    });
    _Drive.prototype.getItemById = function (id) {
        return (0, exports.DriveItem)(this, (0, common_1.combine)("items", id));
    };
    _Drive = (0, tslib_1.__decorate)([
        (0, decorators_js_1.defaultPath)("drive")
    ], _Drive);
    return _Drive;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._Drive = _Drive;
exports.Drive = (0, graphqueryable_js_1.graphInvokableFactory)(_Drive);
/**
 * Describes a collection of Drive objects
 *
 */
var _Drives = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Drives, _super);
    function _Drives() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _Drives.prototype.getById = function (id) {
        return (0, exports.Drive)(this.getUrlBase(), "drives/" + id);
    };
    _Drives = (0, tslib_1.__decorate)([
        (0, decorators_js_1.defaultPath)("drives")
    ], _Drives);
    return _Drives;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._Drives = _Drives;
exports.Drives = (0, graphqueryable_js_1.graphInvokableFactory)(_Drives);
/**
 * Describes a Root instance
 *
 */
var _Root = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Root, _super);
    function _Root() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Root.prototype, "children", {
        get: function () {
            return (0, exports.DriveItems)(this, "children");
        },
        enumerable: false,
        configurable: true
    });
    _Root.prototype.search = function (query) {
        var searcher = this.clone(exports.Root);
        searcher.query.set("search", "'" + query + "'");
        return searcher();
    };
    Object.defineProperty(_Root.prototype, "thumbnails", {
        get: function () {
            return this.clone(graphqueryable_js_1.GraphQueryableCollection, "thumbnails");
        },
        enumerable: false,
        configurable: true
    });
    _Root = (0, tslib_1.__decorate)([
        (0, decorators_js_1.defaultPath)("root")
    ], _Root);
    return _Root;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._Root = _Root;
exports.Root = (0, graphqueryable_js_1.graphInvokableFactory)(_Root);
/**
 * Describes a Drive Item instance
 *
 */
var _DriveItem = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_DriveItem, _super);
    function _DriveItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_DriveItem.prototype, "children", {
        get: function () {
            return (0, exports.DriveItems)(this, "children");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_DriveItem.prototype, "thumbnails", {
        get: function () {
            return this.clone(graphqueryable_js_1.GraphQueryableCollection, "thumbnails");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_DriveItem.prototype, "versions", {
        get: function () {
            return this.clone(graphqueryable_js_1.GraphQueryableCollection, "versions");
        },
        enumerable: false,
        configurable: true
    });
    _DriveItem.prototype.move = function (parentReference, name) {
        return (0, operations_js_1.graphPatch)(this, (0, odata_1.body)((0, common_1.assign)(parentReference, { name: name })));
    };
    _DriveItem.prototype.getContent = function () {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var info, r, p;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.get()];
                    case 1:
                        info = _a.sent();
                        return [4 /*yield*/, common_1.safeGlobal.fetch(info["@microsoft.graph.downloadUrl"], {
                                headers: {
                                    "accept": "application/json",
                                },
                                method: "GET",
                                responseType: "arraybuffer",
                            })];
                    case 2:
                        r = _a.sent();
                        p = new odata_1.BlobParser();
                        return [2 /*return*/, p.parse(r)];
                }
            });
        });
    };
    _DriveItem.prototype.setContent = function (content) {
        return (0, operations_js_1.graphPut)(this.clone(exports.DriveItem, "content"), {
            body: content,
        });
    };
    _DriveItem = (0, tslib_1.__decorate)([
        (0, decorators_js_1.deleteable)(),
        (0, decorators_js_1.updateable)()
    ], _DriveItem);
    return _DriveItem;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._DriveItem = _DriveItem;
exports.DriveItem = (0, graphqueryable_js_1.graphInvokableFactory)(_DriveItem);
/**
 * Describes a collection of Drive Item objects
 *
 */
var _DriveItems = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_DriveItems, _super);
    function _DriveItems() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _DriveItems_1 = _DriveItems;
    _DriveItems.prototype.add = function (filename, content) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var parent, data;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        parent = this.getParent(_DriveItems_1);
                        parent.concat(":/" + filename + ":/content");
                        return [4 /*yield*/, (0, operations_js_1.graphPut)(parent, { body: content })];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                data: data,
                                driveItem: this.getById(data.id),
                            }];
                }
            });
        });
    };
    /**
     * Adds a folder to this collection of drive items
     *
     * @param name Name of the new folder
     * @returns result with folder data and chainable drive item object
     */
    _DriveItems.prototype.addFolder = function (name) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var postBody, data;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        postBody = {
                            name: name,
                            folder: {},
                            "@microsoft.graph.conflictBehavior": "rename",
                        };
                        return [4 /*yield*/, (0, operations_js_1.graphPost)(this, (0, odata_1.body)(postBody))];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                data: data,
                                driveItem: this.getById(data.id),
                            }];
                }
            });
        });
    };
    var _DriveItems_1;
    _DriveItems = _DriveItems_1 = (0, tslib_1.__decorate)([
        (0, decorators_js_1.getById)(exports.DriveItem)
    ], _DriveItems);
    return _DriveItems;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._DriveItems = _DriveItems;
exports.DriveItems = (0, graphqueryable_js_1.graphInvokableFactory)(_DriveItems);
//# sourceMappingURL=types.js.map