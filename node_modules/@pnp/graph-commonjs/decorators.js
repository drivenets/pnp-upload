"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getById = exports.addable = exports.updateableWithETag = exports.updateable = exports.deleteableWithETag = exports.deleteable = exports.defaultPath = void 0;
var tslib_1 = require("tslib");
var operations_js_1 = require("./operations.js");
var odata_1 = require("@pnp/odata-commonjs");
/**
 * Decorator used to specify the default path for Queryable objects
 *
 * @param path
 */
function defaultPath(path) {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            (0, tslib_1.__extends)(class_1, _super);
            function class_1() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;
            }
            return class_1;
        }(target));
    };
}
exports.defaultPath = defaultPath;
/**
 * Adds the delete method to the tagged class
 */
function deleteable() {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            (0, tslib_1.__extends)(class_2, _super);
            function class_2() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_2.prototype.delete = function () {
                return (0, operations_js_1.graphDelete)(this);
            };
            return class_2;
        }(target));
    };
}
exports.deleteable = deleteable;
/**
 * Adds the delete method to the tagged class
 */
function deleteableWithETag() {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            (0, tslib_1.__extends)(class_3, _super);
            function class_3() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_3.prototype.delete = function (eTag) {
                if (eTag === void 0) { eTag = "*"; }
                return (0, operations_js_1.graphDelete)(this, (0, odata_1.headers)({
                    "If-Match": eTag,
                }));
            };
            return class_3;
        }(target));
    };
}
exports.deleteableWithETag = deleteableWithETag;
/**
 * Adds the update method to the tagged class
 */
function updateable() {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            (0, tslib_1.__extends)(class_4, _super);
            function class_4() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_4.prototype.update = function (props) {
                return (0, operations_js_1.graphPatch)(this, (0, odata_1.body)(props));
            };
            return class_4;
        }(target));
    };
}
exports.updateable = updateable;
/**
 * Adds the update method to the tagged class
 */
function updateableWithETag() {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            (0, tslib_1.__extends)(class_5, _super);
            function class_5() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_5.prototype.update = function (props, eTag) {
                if (eTag === void 0) { eTag = "*"; }
                return (0, operations_js_1.graphPatch)(this, (0, odata_1.body)(props, (0, odata_1.headers)({
                    "If-Match": eTag,
                })));
            };
            return class_5;
        }(target));
    };
}
exports.updateableWithETag = updateableWithETag;
/**
 * Adds the add method to the tagged class
 */
function addable() {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            (0, tslib_1.__extends)(class_6, _super);
            function class_6() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_6.prototype.add = function (props) {
                return (0, operations_js_1.graphPost)(this, (0, odata_1.body)(props));
            };
            return class_6;
        }(target));
    };
}
exports.addable = addable;
/**
 * Adds the getById method to a collection
 */
function getById(factory) {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            (0, tslib_1.__extends)(class_7, _super);
            function class_7() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_7.prototype.getById = function (id) {
                return factory(this, id);
            };
            return class_7;
        }(target));
    };
}
exports.getById = getById;
//# sourceMappingURL=decorators.js.map