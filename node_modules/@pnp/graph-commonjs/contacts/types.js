"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContactFolders = exports._ContactFolders = exports.ContactFolder = exports._ContactFolder = exports.Contacts = exports._Contacts = exports.Contact = exports._Contact = void 0;
var tslib_1 = require("tslib");
var graphqueryable_js_1 = require("../graphqueryable.js");
var common_1 = require("@pnp/common-commonjs");
var decorators_js_1 = require("../decorators.js");
var operations_js_1 = require("../operations.js");
var odata_1 = require("@pnp/odata-commonjs");
/**
 * Contact
 */
var _Contact = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Contact, _super);
    function _Contact() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _Contact = (0, tslib_1.__decorate)([
        (0, decorators_js_1.updateable)(),
        (0, decorators_js_1.deleteable)()
    ], _Contact);
    return _Contact;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._Contact = _Contact;
exports.Contact = (0, graphqueryable_js_1.graphInvokableFactory)(_Contact);
/**
 * Contacts
 */
var _Contacts = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Contacts, _super);
    function _Contacts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
    * Create a new Contact for the user.
    *
    * @param givenName The contact's given name.
    * @param surName The contact's surname.
    * @param emailAddresses The contact's email addresses.
    * @param businessPhones The contact's business phone numbers.
    * @param additionalProperties A plain object collection of additional properties you want to set on the new contact
    */
    _Contacts.prototype.add = function (givenName, surName, emailAddresses, businessPhones, additionalProperties) {
        if (additionalProperties === void 0) { additionalProperties = {}; }
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var postBody, data;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        postBody = (0, common_1.assign)({ businessPhones: businessPhones, emailAddresses: emailAddresses, givenName: givenName, surName: surName }, additionalProperties);
                        return [4 /*yield*/, (0, operations_js_1.graphPost)(this, (0, odata_1.body)(postBody))];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                contact: this.getById(data.id),
                                data: data,
                            }];
                }
            });
        });
    };
    _Contacts = (0, tslib_1.__decorate)([
        (0, decorators_js_1.defaultPath)("contacts"),
        (0, decorators_js_1.getById)(exports.Contact)
    ], _Contacts);
    return _Contacts;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._Contacts = _Contacts;
exports.Contacts = (0, graphqueryable_js_1.graphInvokableFactory)(_Contacts);
/**
 * Contact Folder
 */
var _ContactFolder = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_ContactFolder, _super);
    function _ContactFolder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_ContactFolder.prototype, "contacts", {
        /**
         * Gets the contacts in this contact folder
         */
        get: function () {
            return (0, exports.Contacts)(this);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_ContactFolder.prototype, "childFolders", {
        /**
        * Gets the contacts in this contact folder
        */
        get: function () {
            return (0, exports.ContactFolders)(this, "childFolders");
        },
        enumerable: false,
        configurable: true
    });
    _ContactFolder = (0, tslib_1.__decorate)([
        (0, decorators_js_1.deleteable)(),
        (0, decorators_js_1.updateable)()
    ], _ContactFolder);
    return _ContactFolder;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._ContactFolder = _ContactFolder;
exports.ContactFolder = (0, graphqueryable_js_1.graphInvokableFactory)(_ContactFolder);
/**
 * Contact Folders
 */
var _ContactFolders = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_ContactFolders, _super);
    function _ContactFolders() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Create a new Contact Folder for the user.
     *
     * @param displayName The folder's display name.
     * @param parentFolderId The ID of the folder's parent folder.
     */
    _ContactFolders.prototype.add = function (displayName, parentFolderId) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var postBody, data;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        postBody = {
                            displayName: displayName,
                            parentFolderId: parentFolderId,
                        };
                        return [4 /*yield*/, (0, operations_js_1.graphPost)(this, (0, odata_1.body)(postBody))];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                contactFolder: this.getById(data.id),
                                data: data,
                            }];
                }
            });
        });
    };
    _ContactFolders = (0, tslib_1.__decorate)([
        (0, decorators_js_1.defaultPath)("contactFolders"),
        (0, decorators_js_1.getById)(exports.ContactFolder)
    ], _ContactFolders);
    return _ContactFolders;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._ContactFolders = _ContactFolders;
exports.ContactFolders = (0, graphqueryable_js_1.graphInvokableFactory)(_ContactFolders);
//# sourceMappingURL=types.js.map