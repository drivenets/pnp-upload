"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Senders = exports._Senders = exports.Posts = exports._Posts = exports.Post = exports._Post = exports.Threads = exports._Threads = exports.Thread = exports._Thread = exports.Conversations = exports._Conversations = exports.Conversation = exports._Conversation = void 0;
var tslib_1 = require("tslib");
var odata_1 = require("@pnp/odata-commonjs");
var graphqueryable_js_1 = require("../graphqueryable.js");
var decorators_js_1 = require("../decorators.js");
var operations_js_1 = require("../operations.js");
/**
 * Conversation
 */
var _Conversation = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Conversation, _super);
    function _Conversation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Conversation.prototype, "threads", {
        /**
         * Get all the threads in a group conversation.
         */
        get: function () {
            return (0, exports.Threads)(this);
        },
        enumerable: false,
        configurable: true
    });
    _Conversation = (0, tslib_1.__decorate)([
        (0, decorators_js_1.updateable)(),
        (0, decorators_js_1.deleteable)()
    ], _Conversation);
    return _Conversation;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._Conversation = _Conversation;
exports.Conversation = (0, graphqueryable_js_1.graphInvokableFactory)(_Conversation);
/**
 * Conversations
 */
var _Conversations = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Conversations, _super);
    function _Conversations() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _Conversations = (0, tslib_1.__decorate)([
        (0, decorators_js_1.defaultPath)("conversations"),
        (0, decorators_js_1.addable)(),
        (0, decorators_js_1.getById)(exports.Conversation)
    ], _Conversations);
    return _Conversations;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._Conversations = _Conversations;
exports.Conversations = (0, graphqueryable_js_1.graphInvokableFactory)(_Conversations);
/**
 * Thread
 */
var _Thread = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Thread, _super);
    function _Thread() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Thread.prototype, "posts", {
        /**
         * Get all the threads in a group conversation.
         */
        get: function () {
            return (0, exports.Posts)(this);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Reply to a thread in a group conversation and add a new post to it
     *
     * @param post Contents of the post
     */
    _Thread.prototype.reply = function (post) {
        return (0, operations_js_1.graphPost)(this.clone(exports.Thread, "reply"), (0, odata_1.body)(post));
    };
    _Thread = (0, tslib_1.__decorate)([
        (0, decorators_js_1.deleteable)()
    ], _Thread);
    return _Thread;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._Thread = _Thread;
exports.Thread = (0, graphqueryable_js_1.graphInvokableFactory)(_Thread);
/**
 * Threads
 */
var _Threads = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Threads, _super);
    function _Threads() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _Threads = (0, tslib_1.__decorate)([
        (0, decorators_js_1.defaultPath)("threads"),
        (0, decorators_js_1.addable)(),
        (0, decorators_js_1.getById)(exports.Thread)
    ], _Threads);
    return _Threads;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._Threads = _Threads;
exports.Threads = (0, graphqueryable_js_1.graphInvokableFactory)(_Threads);
/**
 * Post
 */
var _Post = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Post, _super);
    function _Post() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Forward a post to a recipient
     */
    _Post.prototype.forward = function (info) {
        return (0, operations_js_1.graphPost)(this.clone(exports.Post, "forward"), (0, odata_1.body)(info));
    };
    /**
     * Reply to a thread in a group conversation and add a new post to it
     *
     * @param post Contents of the post
     */
    _Post.prototype.reply = function (post) {
        return (0, operations_js_1.graphPost)(this.clone(exports.Post, "reply"), (0, odata_1.body)(post));
    };
    _Post = (0, tslib_1.__decorate)([
        (0, decorators_js_1.deleteable)()
    ], _Post);
    return _Post;
}(graphqueryable_js_1._GraphQueryableInstance));
exports._Post = _Post;
exports.Post = (0, graphqueryable_js_1.graphInvokableFactory)(_Post);
/**
 * Posts
 */
var _Posts = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Posts, _super);
    function _Posts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _Posts = (0, tslib_1.__decorate)([
        (0, decorators_js_1.defaultPath)("posts"),
        (0, decorators_js_1.addable)(),
        (0, decorators_js_1.getById)(exports.Post)
    ], _Posts);
    return _Posts;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._Posts = _Posts;
exports.Posts = (0, graphqueryable_js_1.graphInvokableFactory)(_Posts);
/**
 * Senders
 */
var _Senders = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Senders, _super);
    function _Senders() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Add a new user or group to this senders collection
     * @param id The full @odata.id value to add (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)
     */
    _Senders.prototype.add = function (id) {
        return (0, operations_js_1.graphPost)(this.clone(exports.Senders, "$ref"), (0, odata_1.body)({ "@odata.id": id }));
    };
    /**
     * Removes the entity from the collection
     *
     * @param id The full @odata.id value to remove (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)
     */
    _Senders.prototype.remove = function (id) {
        var remover = this.clone(exports.Senders, "$ref");
        remover.query.set("$id", id);
        return (0, operations_js_1.graphDelete)(remover);
    };
    return _Senders;
}(graphqueryable_js_1._GraphQueryableCollection));
exports._Senders = _Senders;
exports.Senders = (0, graphqueryable_js_1.graphInvokableFactory)(_Senders);
//# sourceMappingURL=types.js.map