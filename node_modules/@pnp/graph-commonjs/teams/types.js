"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tabs = exports._Tabs = exports.Tab = exports._Tab = exports.Channels = exports._Channels = exports.Channel = exports._Channel = exports.Teams = exports._Teams = exports.Team = exports._Team = void 0;
var tslib_1 = require("tslib");
var graphqueryable_1 = require("../graphqueryable");
var odata_1 = require("@pnp/odata-commonjs");
var common_1 = require("@pnp/common-commonjs");
var decorators_1 = require("../decorators");
var operations_1 = require("../operations");
var decorators_2 = require("../decorators");
/**
 * Represents a Microsoft Team
 */
var _Team = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Team, _super);
    function _Team() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Team.prototype, "channels", {
        get: function () {
            return (0, exports.Channels)(this);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Archives this Team
     *
     * @param shouldSetSpoSiteReadOnlyForMembers Should members have Read-only in associated Team Site
     */
    _Team.prototype.archive = function (shouldSetSpoSiteReadOnlyForMembers) {
        if (shouldSetSpoSiteReadOnlyForMembers === void 0) { shouldSetSpoSiteReadOnlyForMembers = false; }
        return (0, operations_1.graphPost)(this.clone(exports.Team, "archive"), (0, odata_1.body)({ shouldSetSpoSiteReadOnlyForMembers: shouldSetSpoSiteReadOnlyForMembers }));
    };
    /**
    * Unarchives this Team
    */
    _Team.prototype.unarchive = function () {
        return (0, operations_1.graphPost)(this.clone(exports.Team, "unarchive"));
    };
    /**
     * Clones this Team
     * @param name The name of the new Group
     * @param description Optional description of the group
     * @param partsToClone Parts to clone ex: apps,tabs,settings,channels,members
     * @param visibility Set visibility to public or private
     */
    _Team.prototype.cloneTeam = function (name, description, partsToClone, visibility) {
        if (description === void 0) { description = ""; }
        if (partsToClone === void 0) { partsToClone = "apps,tabs,settings,channels,members"; }
        if (visibility === void 0) { visibility = "private"; }
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var postBody, parser, creator, data, result, location_1, locationArray;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        postBody = {
                            description: description ? description : "",
                            displayName: name,
                            mailNickname: name,
                            partsToClone: partsToClone,
                            visibility: visibility,
                        };
                        parser = new odata_1.LambdaParser(function (r) { return Promise.resolve(r.headers); });
                        creator = (0, exports.Teams)(this, "clone").usingParser(parser);
                        return [4 /*yield*/, (0, operations_1.graphPost)(creator, (0, odata_1.body)(postBody))];
                    case 1:
                        data = _a.sent();
                        result = { teamId: "", operationId: "" };
                        if (data.has("location")) {
                            location_1 = data.get("location");
                            locationArray = location_1.split("/");
                            if (locationArray.length === 3) {
                                result.teamId = locationArray[1].substring(locationArray[1].indexOf("'") + 1, locationArray[1].lastIndexOf("'"));
                                result.operationId = locationArray[2].substring(locationArray[2].indexOf("'") + 1, locationArray[2].lastIndexOf("'"));
                            }
                        }
                        return [2 /*return*/, result];
                }
            });
        });
    };
    _Team.prototype.getOperationById = function (id) {
        return (0, graphqueryable_1.GraphQueryableInstance)(this, "operations/" + id)();
    };
    _Team = (0, tslib_1.__decorate)([
        (0, decorators_2.defaultPath)("team"),
        (0, decorators_1.updateable)()
    ], _Team);
    return _Team;
}(graphqueryable_1._GraphQueryableInstance));
exports._Team = _Team;
exports.Team = (0, graphqueryable_1.graphInvokableFactory)(_Team);
/**
 * Teams
 */
var _Teams = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Teams, _super);
    function _Teams() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _Teams.prototype.create = function (team) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var parser, creator, data, result, location_2, locationArray;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        parser = new odata_1.LambdaParser(function (r) { return Promise.resolve(r.headers); });
                        creator = (0, exports.Teams)(this, null).usingParser(parser);
                        return [4 /*yield*/, (0, operations_1.graphPost)(creator, (0, odata_1.body)(team))];
                    case 1:
                        data = _a.sent();
                        result = { teamId: "", operationId: "" };
                        if (data.has("location")) {
                            location_2 = data.get("location");
                            locationArray = location_2.split("/");
                            if (locationArray.length === 3) {
                                result.teamId = locationArray[1].substring(locationArray[1].indexOf("'") + 1, locationArray[1].lastIndexOf("'"));
                                result.operationId = locationArray[2].substring(locationArray[2].indexOf("'") + 1, locationArray[2].lastIndexOf("'"));
                            }
                        }
                        return [2 /*return*/, result];
                }
            });
        });
    };
    _Teams = (0, tslib_1.__decorate)([
        (0, decorators_2.defaultPath)("teams"),
        (0, decorators_1.getById)(exports.Team)
    ], _Teams);
    return _Teams;
}(graphqueryable_1._GraphQueryableCollection));
exports._Teams = _Teams;
exports.Teams = (0, graphqueryable_1.graphInvokableFactory)(_Teams);
/**
 * Channel
 */
var _Channel = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Channel, _super);
    function _Channel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Channel.prototype, "tabs", {
        get: function () {
            return (0, exports.Tabs)(this);
        },
        enumerable: false,
        configurable: true
    });
    return _Channel;
}(graphqueryable_1._GraphQueryableInstance));
exports._Channel = _Channel;
exports.Channel = (0, graphqueryable_1.graphInvokableFactory)(_Channel);
/**
 * Channels
 */
var _Channels = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Channels, _super);
    function _Channels() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new Channel in the Team
     * @param displayName The display name of the new channel
     * @param description Optional description of the channel
     *
     */
    _Channels.prototype.add = function (displayName, description) {
        if (description === void 0) { description = ""; }
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var postBody, data;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        postBody = {
                            description: description,
                            displayName: displayName,
                        };
                        return [4 /*yield*/, (0, operations_1.graphPost)(this, (0, odata_1.body)(postBody))];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                channel: this.getById(data.id),
                                data: data,
                            }];
                }
            });
        });
    };
    _Channels = (0, tslib_1.__decorate)([
        (0, decorators_2.defaultPath)("channels"),
        (0, decorators_1.getById)(exports.Channel)
    ], _Channels);
    return _Channels;
}(graphqueryable_1._GraphQueryableCollection));
exports._Channels = _Channels;
exports.Channels = (0, graphqueryable_1.graphInvokableFactory)(_Channels);
/**
 * Tab
 */
var _Tab = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Tab, _super);
    function _Tab() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _Tab = (0, tslib_1.__decorate)([
        (0, decorators_2.defaultPath)("tab"),
        (0, decorators_1.updateable)(),
        (0, decorators_1.deleteable)()
    ], _Tab);
    return _Tab;
}(graphqueryable_1._GraphQueryableInstance));
exports._Tab = _Tab;
exports.Tab = (0, graphqueryable_1.graphInvokableFactory)(_Tab);
/**
 * Tabs
 */
var _Tabs = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(_Tabs, _super);
    function _Tabs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Adds a tab to the channel
     * @param name The name of the new Tab
     * @param appUrl The url to an app ex: https://graph.microsoft.com/beta/appCatalogs/teamsApps/12345678-9abc-def0-123456789a
     * @param tabsConfiguration visit https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/teamstab_add for reference
     */
    _Tabs.prototype.add = function (name, appUrl, properties) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var postBody, data;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        postBody = (0, common_1.assign)({
                            displayName: name,
                            "teamsApp@odata.bind": appUrl,
                        }, properties);
                        return [4 /*yield*/, (0, operations_1.graphPost)(this, (0, odata_1.body)(postBody))];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                data: data,
                                tab: this.getById(data.id),
                            }];
                }
            });
        });
    };
    _Tabs = (0, tslib_1.__decorate)([
        (0, decorators_2.defaultPath)("tabs"),
        (0, decorators_1.getById)(exports.Tab)
    ], _Tabs);
    return _Tabs;
}(graphqueryable_1._GraphQueryableCollection));
exports._Tabs = _Tabs;
exports.Tabs = (0, graphqueryable_1.graphInvokableFactory)(_Tabs);
//# sourceMappingURL=types.js.map