"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.graphPut = exports.graphPatch = exports.graphDelete = exports.graphPost = exports.graphGet = exports.registerCustomRequestClientFactory = void 0;
var tslib_1 = require("tslib");
var common_1 = require("@pnp/common-commonjs");
var odata_1 = require("@pnp/odata-commonjs");
var graphhttpclient_js_1 = require("./graphhttpclient.js");
var toabsoluteurl_js_1 = require("./utils/toabsoluteurl.js");
function registerCustomRequestClientFactory(requestClientFactory) {
    httpClientFactory = (0, common_1.isFunc)(requestClientFactory) ? function () { return requestClientFactory; } : defaultFactory;
}
exports.registerCustomRequestClientFactory = registerCustomRequestClientFactory;
var defaultFactory = function (runtime) { return function () { return new graphhttpclient_js_1.GraphHttpClient(runtime); }; };
var httpClientFactory = defaultFactory;
var send = function (method) {
    return function (o, options) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var runtime, operation, data, batchDependency, url;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        runtime = o.getRuntime();
                        operation = (0, odata_1.defaultPipelineBinder)(httpClientFactory(runtime))(method);
                        data = (0, odata_1.cloneQueryableData)(o.data);
                        batchDependency = (0, common_1.objectDefinedNotNull)(data.batch) ? data.batch.addDependency() : function () {
                            return;
                        };
                        return [4 /*yield*/, (0, toabsoluteurl_js_1.toAbsoluteUrl)(o.toUrlAndQuery(), runtime)];
                    case 1:
                        url = _a.sent();
                        (0, common_1.mergeOptions)(data.options, options);
                        return [2 /*return*/, operation(Object.assign({}, data, {
                                batchDependency: batchDependency,
                                url: url,
                            }))];
                }
            });
        });
    };
};
var graphGet = function (o, options) { return send("GET")(o, options); };
exports.graphGet = graphGet;
var graphPost = function (o, options) { return send("POST")(o, options); };
exports.graphPost = graphPost;
var graphDelete = function (o, options) { return send("DELETE")(o, options); };
exports.graphDelete = graphDelete;
var graphPatch = function (o, options) { return send("PATCH")(o, options); };
exports.graphPatch = graphPatch;
var graphPut = function (o, options) { return send("PUT")(o, options); };
exports.graphPut = graphPut;
//# sourceMappingURL=operations.js.map