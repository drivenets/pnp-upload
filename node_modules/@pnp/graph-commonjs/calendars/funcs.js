"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.instances = exports.findRooms = exports.calendarView = void 0;
var graphqueryable_js_1 = require("../graphqueryable.js");
/**
 * Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range,
 * from the user's default calendar, or from some other calendar of the user's
 *
 * @param this IGraphQueryable instance
 * @param start start time
 * @param end end time
 */
function calendarView(start, end) {
    var query = this.clone(graphqueryable_js_1.GraphQueryableCollection, "calendarView");
    query.query.set("startDateTime", encodeURIComponent(start));
    query.query.set("endDateTime", encodeURIComponent(end));
    return query;
}
exports.calendarView = calendarView;
/**
 * Get the emailAddress objects that represent all the meeting rooms in the user's tenant or in a specific room list.
 *
 * @param this IGraphQueryable instance
 * @param roomList The SMTP address associated with the room list.
 */
function findRooms(roomList) {
    var query = this.clone(graphqueryable_js_1.GraphQueryableCollection, roomList ? "findRooms(RoomList=@roomList)" : "findRooms");
    query.setEndpoint("beta");
    if (roomList) {
        query.query.set("@roomList", "'" + encodeURIComponent(roomList) + "'");
    }
    return query;
}
exports.findRooms = findRooms;
/**
 * Get the instances (occurrences) of an event for a specified time range.
 * If the event is a seriesMaster type, this returns the occurrences and exceptions of the event in the specified time range.
 *
 * @param this IGraphQueryable instance
 * @param start start time
 * @param end end time
 */
function instances(start, end) {
    var query = this.clone(graphqueryable_js_1.GraphQueryableCollection, "instances");
    query.query.set("startDateTime", encodeURIComponent(start));
    query.query.set("endDateTime", encodeURIComponent(end));
    return query;
}
exports.instances = instances;
//# sourceMappingURL=funcs.js.map