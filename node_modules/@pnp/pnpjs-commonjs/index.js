"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setup = exports.log = exports.config = exports.storage = exports.graph = exports.sp = exports.util = void 0;
var tslib_1 = require("tslib");
var logging_1 = require("@pnp/logging-commonjs");
var common_1 = require("@pnp/common-commonjs");
var config_store_1 = require("@pnp/config-store");
var sp_addinhelpers_1 = require("@pnp/sp-addinhelpers");
var pnplibconfig_js_1 = require("./pnplibconfig.js");
var graph_1 = require("@pnp/graph-commonjs");
// trigger attachment of all functionality to mimic the previous pnpjs impl
require("@pnp/sp-commonjs/presets/all");
require("@pnp/graph-commonjs/presets/all");
/**
 * Re-export everything from the dependencies to match the previous pattern
 */
(0, tslib_1.__exportStar)(require("@pnp/common-commonjs"), exports);
(0, tslib_1.__exportStar)(require("@pnp/logging-commonjs"), exports);
(0, tslib_1.__exportStar)(require("@pnp/config-store"), exports);
(0, tslib_1.__exportStar)(require("@pnp/odata-commonjs"), exports);
(0, tslib_1.__exportStar)(require("./sp-ns.js"), exports);
(0, tslib_1.__exportStar)(require("./graph-ns.js"), exports);
/**
 * Utility methods
 */
exports.util = {
    assign: common_1.assign,
    combine: common_1.combine,
    dateAdd: common_1.dateAdd,
    getCtxCallback: common_1.getCtxCallback,
    getGUID: common_1.getGUID,
    getRandomString: common_1.getRandomString,
    isArray: common_1.isArray,
    isFunc: common_1.isFunc,
    isUrlAbsolute: common_1.isUrlAbsolute,
    objectDefinedNotNull: common_1.objectDefinedNotNull,
    sanitizeGuid: common_1.sanitizeGuid,
    stringIsNullOrEmpty: common_1.stringIsNullOrEmpty,
};
/**
 * Provides access to the SharePoint REST interface
 */
exports.sp = sp_addinhelpers_1.sp;
/**
 * Provides access to the SharePoint REST interface
 */
exports.graph = graph_1.graph;
/**
 * Provides access to local and session storage
 */
exports.storage = new common_1.PnPClientStorage();
/**
 * Global configuration instance to which providers can be added
 */
exports.config = new config_store_1.Settings();
/**
 * Global logging instance to which subscribers can be registered and messages written
 */
exports.log = logging_1.Logger;
/**
 * Allows for the configuration of the library
 */
exports.setup = pnplibconfig_js_1.setup;
// creating this class instead of directly assigning to default fixes a previous issue
var Def = {
    /**
     * Global configuration instance to which providers can be added
     */
    config: exports.config,
    /**
     * Provides access to the Graph REST interface
     */
    graph: exports.graph,
    /**
     * Global logging instance to which subscribers can be registered and messages written
     */
    log: exports.log,
    /**
     * Provides access global setup method
     */
    setup: exports.setup,
    /**
     * Provides access to the SharePoint REST interface
     */
    sp: exports.sp,
    /**
     * Provides access to local and session storage
     */
    storage: exports.storage,
    /**
     * Utility methods
     */
    util: exports.util,
};
/**
 * Enables use of the import pnp from syntax
 */
exports.default = Def;
//# sourceMappingURL=index.js.map