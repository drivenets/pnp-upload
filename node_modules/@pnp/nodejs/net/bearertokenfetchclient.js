import { mergeHeaders } from "@pnp/common";
import { fetch } from "./fetch.js";
/**
 * Makes requests using the fetch API adding the supplied token to the Authorization header
 */
var BearerTokenFetchClient = /** @class */ (function () {
    function BearerTokenFetchClient(_token) {
        this._token = _token;
    }
    Object.defineProperty(BearerTokenFetchClient.prototype, "token", {
        get: function () {
            return this._token || "";
        },
        set: function (token) {
            this._token = token;
        },
        enumerable: false,
        configurable: true
    });
    BearerTokenFetchClient.prototype.fetch = function (url, options) {
        if (options === void 0) { options = {}; }
        var headers = new Headers();
        mergeHeaders(headers, options.headers);
        headers.set("Authorization", "Bearer " + this._token);
        options.headers = headers;
        return fetch(url, options);
    };
    return BearerTokenFetchClient;
}());
export { BearerTokenFetchClient };
//# sourceMappingURL=bearertokenfetchclient.js.map