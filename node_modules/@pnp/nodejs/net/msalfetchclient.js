import { ConfidentialClientApplication } from "@azure/msal-node";
import { objectDefinedNotNull, assign, } from "@pnp/common";
import { fetch } from "./fetch.js";
var MsalFetchClient = /** @class */ (function () {
    function MsalFetchClient(_config, _scopes) {
        if (_scopes === void 0) { _scopes = ["https://graph.microsoft.com/.default"]; }
        this._scopes = _scopes;
        this.confidentialClient = new ConfidentialClientApplication(_config);
    }
    MsalFetchClient.prototype.fetch = function (url, options) {
        if (!objectDefinedNotNull(options)) {
            options = {
                headers: new Headers(),
            };
        }
        else if (!objectDefinedNotNull(options.headers)) {
            options = assign(options, {
                headers: new Headers(),
            });
        }
        return this.acquireToken().then(function (token) {
            options.headers.set("Authorization", token.tokenType + " " + token.accessToken);
            return fetch(url, options);
        });
    };
    MsalFetchClient.prototype.acquireToken = function (scopes) {
        if (scopes === void 0) { scopes = this._scopes; }
        return this.confidentialClient.acquireTokenByClientCredential({ scopes: scopes });
    };
    return MsalFetchClient;
}());
export { MsalFetchClient };
//# sourceMappingURL=msalfetchclient.js.map