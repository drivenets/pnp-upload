"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sp = exports.SPRestAddIn = void 0;
var tslib_1 = require("tslib");
var sp_1 = require("@pnp/sp-commonjs");
var webs_1 = require("@pnp/sp-commonjs/webs");
var sites_1 = require("@pnp/sp-commonjs/sites");
var common_1 = require("@pnp/common-commonjs");
var SPRestAddIn = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(SPRestAddIn, _super);
    function SPRestAddIn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Begins a cross-domain, host site scoped REST request, for use in add-in webs
     *
     * @param addInWebUrl The absolute url of the add-in web
     * @param hostWebUrl The absolute url of the host web
     */
    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {
        return this._cdImpl(sites_1.Site, addInWebUrl, hostWebUrl, "site");
    };
    /**
     * Begins a cross-domain, host web scoped REST request, for use in add-in webs
     *
     * @param addInWebUrl The absolute url of the add-in web
     * @param hostWebUrl The absolute url of the host web
     */
    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {
        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, "web");
    };
    /**
     * Implements the creation of cross domain REST urls
     *
     * @param factory The constructor of the object to create Site | Web
     * @param addInWebUrl The absolute url of the add-in web
     * @param hostWebUrl The absolute url of the host web
     * @param urlPart String part to append to the url "site" | "web"
     */
    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {
        if (!(0, common_1.isUrlAbsolute)(addInWebUrl)) {
            throw Error("The addInWebUrl parameter must be an absolute url.");
        }
        if (!(0, common_1.isUrlAbsolute)(hostWebUrl)) {
            throw Error("The hostWebUrl parameter must be an absolute url.");
        }
        var url = (0, common_1.combine)(addInWebUrl, "_api/SP.AppContextSite(@target)");
        var instance = factory(url, urlPart);
        instance.query.set("@target", "'" + encodeURIComponent(hostWebUrl) + "'");
        return this.childConfigHook(function (_a) {
            var options = _a.options, runtime = _a.runtime;
            return instance.configure(options).setRuntime(runtime);
        });
    };
    return SPRestAddIn;
}(sp_1.SPRest));
exports.SPRestAddIn = SPRestAddIn;
exports.sp = new SPRestAddIn();
//# sourceMappingURL=sprestaddin.js.map